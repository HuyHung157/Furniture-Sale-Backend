# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BaseResponseType {
  message: String
  statusCode: Float
}

type CategoryResponseType {
  id: ID!
  name: String!
  type: String
  index: Float
  description: String
  pictureUrl: String
  iconFa: String
  createdAt: DateTime
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  isActive: Boolean
  indexHome: Float
  isShowHome: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CategoryListResponseType {
  totalItems: Float!
  items: [CategoryResponseType!]
}

type ProductHomeResponseType {
  id: ID!
  name: String
  type: String
  index: Float
  description: String
  price: Float
  referencePrice: Float
  discount: Float
  size: String
  color: String
  pictureUrl: String
  createdAt: DateTime
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  isActive: Boolean
}

type ProductCategoryResponseType {
  id: String!
  product: ProductHomeResponseType!
}

type CategoryProductResponseType {
  id: ID!
  name: String
  type: String
  index: Float
  description: String
  pictureUrl: String
  iconFa: String
  createdAt: DateTime
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  isActive: Boolean
  indexHome: Float
  isShowHome: Boolean
  products: [ProductCategoryResponseType!]
}

type CategoryProductListResponseType {
  totalItems: Float!
  items: [CategoryProductResponseType!]
}

type CategoryListProductResponseType {
  id: String!
  category: CategoryResponseType
}

type ProductResponseType {
  id: ID!
  name: String
  type: String
  index: Float
  description: String
  price: Float
  referencePrice: Float
  discount: Float
  size: String
  color: String
  pictureUrl: String
  categories: [CategoryListProductResponseType!]
  createdAt: DateTime
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  isActive: Boolean
}

type ProductListResponseType {
  totalItems: Float!
  items: [ProductResponseType!]
}

type UserResponseType {
  id: ID!
  firstName: String
  lastName: String
  country: String
  phoneNumberPrefix: String
  phoneNumber: String
  profileUrl: String
  birthday: DateTime
  gender: String
}

type UserListResponseType {
  totalItems: Float!
  items: [UserResponseType!]
}

type TokenType {
  token: String!
  refreshToken: String!
}

type CheckEmailUsedType {
  isEmailUsed: Boolean!
}

type CityResponseType {
  name: String
  slug: String
  type: String
  nameWithType: String
  code: String
}

type CityListResponseType {
  totalItems: Float!
  items: [CityResponseType!]
}

type DistrictResponseType {
  name: String
  slug: String
  type: String
  nameWithType: String
  code: String
  path: String
  pathWithType: String
  parentCode: String
}

type DistrictListResponseType {
  totalItems: Float!
  items: [DistrictResponseType!]
}

type WardResponseType {
  name: String
  slug: String
  type: String
  nameWithType: String
  code: String
  path: String
  pathWithType: String
  parentCode: String
}

type WardListResponseType {
  totalItems: Float!
  items: [WardResponseType!]
}

type Query {
  getProductList(input: ProductListRequestType!): ProductListResponseType!
  getListItemByCategory(input: ProductListByCategoryType!): ProductListResponseType!
  getProductById(id: String!): ProductResponseType!
  getListCategory: CategoryListResponseType!
  getListCategoryWithPaging(input: BaseSearchInput!): CategoryListResponseType!
  getListCategoryShowHome: CategoryProductListResponseType!
  getCategoryById(id: String!): CategoryResponseType!
  getUserList(input: UserListRequestType!): UserListResponseType!
  checkEmailUsed(email: String!): CheckEmailUsedType!
  getUserAdminList(input: UserListRequestType!): UserListResponseType!
  getListCityVN: CityListResponseType!
  getListDistrictByCityCode(cityCode: String!): DistrictListResponseType!
  getListWardByDistrictCode(districtCode: String!): WardListResponseType!
}

input ProductListRequestType {
  keyword: String
  paging: PagingInput!
  sorting: SortingInput
}

input PagingInput {
  pageIndex: Int = 1
  pageSize: Int = 50
  notLoadCount: Boolean = false
  numberPageToLoad: Int = null
}

input SortingInput {
  sortFieldName: String!
  descending: Boolean = false
}

input ProductListByCategoryType {
  id: String!
  paging: PagingInput!
}

input BaseSearchInput {
  keyword: String
  paging: PagingInput!
  sorting: SortingInput
}

input UserListRequestType {
  keyword: String
  paging: PagingInput!
  sorting: SortingInput
}

type Mutation {
  createProduct(input: ProductCreateRequestType!): BaseResponseType!
  updateProduct(input: ProductUpdateRequestType!): BaseResponseType!
  deleteProduct(id: String!): BaseResponseType!
  createCategory(input: CategoryCreateRequestType!): BaseResponseType!
  updateCategory(input: CategoryUpdateRequestType!): BaseResponseType!
  deleteCategory(id: String!): BaseResponseType!
  signUp(input: SignUpRequestType!): BaseResponseType!
  signIn(input: SignInRequestType!): TokenType!
  signInWithProvider(input: SignUpByProviderRequestType!): TokenType!
  createUserAdmin(input: UserAdminCreateRequestType!): BaseResponseType!
}

input ProductCreateRequestType {
  name: String!
  type: String
  index: Float
  description: String
  price: Float
  referencePrice: Float
  discount: Float
  size: String
  color: String
  pictureUrl: String
  isActive: Boolean
  categoryIds: [String!]
}

input ProductUpdateRequestType {
  id: String!
  name: String!
  type: String
  index: Float
  description: String
  price: Float
  referencePrice: Float
  discount: Float
  size: String
  color: String
  pictureUrl: String
  isActive: Boolean
  categoryIds: [String!]!
}

input CategoryCreateRequestType {
  name: String!
  type: String
  index: Float!
  description: String
  pictureUrl: String
  iconFa: String
  isActive: Boolean
  indexHome: Float
  isShowHome: Boolean
}

input CategoryUpdateRequestType {
  id: String!
  name: String!
  type: String
  index: Float!
  description: String
  pictureUrl: String
  iconFa: String
  isActive: Boolean
  indexHome: Float
  isShowHome: Boolean
}

input SignUpRequestType {
  password: String!
  email: String!
  firstName: String!
  lastName: String!
  birthday: DateTime!
  gender: Gender!
  phoneNumber: String!
  phoneNumberPrefix: String!
  address: String!
  ward: String!
  district: String!
  city: String!
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

input SignInRequestType {
  email: String!
  password: String!
}

input SignUpByProviderRequestType {
  email: String!
  fullName: String!
  firebaseUid: String!
  providerId: String!
  pictureUrl: String!
}

input UserAdminCreateRequestType {
  password: String!
  email: String!
  firstName: String!
  lastName: String!
  birthday: DateTime
  gender: Gender!
  profileUrl: String
  phoneNumber: String
  phoneNumberPrefix: String!
  address: String
  ward: String
  district: String
  city: String
}